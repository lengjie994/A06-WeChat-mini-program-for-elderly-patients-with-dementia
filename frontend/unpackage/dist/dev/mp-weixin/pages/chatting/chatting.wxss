
image.data-v-eb12b574 {
		width: 55rpx;
		height: 50rpx;
}
.funcbtn.data-v-eb12b574 {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		width: 100rpx;
		height: 100rpx;
}
.more-view.data-v-eb12b574 {
		background-color: #F1F1F1;
		height: 200rpx;
}
.wrap.data-v-eb12b574 {
		padding-top: 80rpx;
		height: 100%;
		width: 100%;
		position: relative;
}
.touxiang.data-v-eb12b574 {
		width: 100rpx;
		height: 100rpx;
		border-radius: 50%;
}
.areaBox.data-v-eb12b574 {
		margin-left: 30rpx;
		margin-top: 5rpx;
		background-color: white;
		height: 70rpx;
}
.title.data-v-eb12b574 {
		height: 80rpx;
		width: 100%;
		background-color: #eaeaea;
		z-index: 1000;
		display: flex;
		justify-content: center;
		align-items: center;
}
.bottom.data-v-eb12b574 {
		min-height: 100rpx;
		width: 100%;
		border-top: 2rpx solid #eaeaea;
		background-color: #F1F1F1;
		position: fixed;
		bottom: 0;

		justify-content: space-between;
		align-items: center;
		/* padding: 0 10rpx; */
		border-radius: 20rpx;
}
.input.data-v-eb12b574 {
		display: flex;
}
.content_box.data-v-eb12b574 {
		/* 
  中间栏计算高度，110是包含了上下固定的两个元素高度90
  这里padding：10rpx造成的上下够加了10，把盒子撑大了，所以一共是20要减掉
  然后不知道是边框还是组件的原因，导致多出了一些，这里再减去5rpx刚好。不然会出现滚动条到顶或者底部的时候再滚动的话就会报一个错，或者出现滚动条变长一下的bug
  */
		height: calc(100% - 230rpx);
		overflow: auto;
		padding: 20rpx 20rpx 100rpx 20rpx;
}
.timer.data-v-eb12b574 {
		text-align: center;
		color: #c2c2c2;
}

	/* 发送的信息样式 */

	/* 
右边消息思路解释：首先大盒子userbox内放两个盒子，一个放头像，一个放用户名和发送的内容，我们先用flex让他横向排列。
然后把写文字的大盒子设置flex：1。这个属性的意思就是让这个元素撑满父盒子剩余位置。然后我们再把文字盒子设置flex，并把他对齐方式设置为尾部对齐就完成了基本的结构，然后微调一下就可以了
*/
.userbox.data-v-eb12b574 {
		width: 100%;
		display: flex;
		margin-bottom: 20rpx;
}
.nameInfo.data-v-eb12b574 {
		/* 用flex：1把盒子撑开 */
		flex: 1;
		margin-right: 20rpx;
		/* 用align-items把元素靠右对齐 */
		display: flex;
		flex-direction: column;
		align-items: flex-end;
}
.contentText.data-v-eb12b574 {
		background-color: #9eea6a;
		/* 把内容部分改为行内块元素，因为盒子flex：1把盒子撑大了，所以用行内块元素让内容宽度不根据父盒子来 */
		display: inline-block;
		/* 这四句是圆角 */
		border-top-left-radius: 20rpx;
		border-top-right-radius: 0rpx;
		border-bottom-right-radius: 20rpx;
		border-bottom-left-radius: 20rpx;
		/* 最大宽度限定内容输入到百分61换行 */
		max-width: 61%;
		padding: 10rpx 20rpx;
		/* 忽略多余的空白，只保留一个空白 */
		white-space: normal;
		/* 换行显示全部字符 */
		word-break: break-all;
		margin-top: 6rpx;
		font-size: 28rpx;
}

	/* 接收的信息样式 */

	/* 
左边消息思路解释：跟上面一样，就是换一下位置，首先通过把最外层大盒子的排列方式通过flex-direction: row-reverse;属性翻转，也就是头像和文字盒子换位置
然后删除掉尾部对齐方式，因为不写这个默认是左对齐的。我们写的左边就没必要再写了。
*/
.userbox2.data-v-eb12b574 {
		width: 100%;
		display: flex;
		flex-direction: row-reverse;
		margin-bottom: 20rpx;
}
.nameInfo2.data-v-eb12b574 {
		/* 用flex：1把盒子撑开 */
		flex: 1;
		margin-left: 20rpx;
}
.contentText2.data-v-eb12b574 {
		background-color: #9eea6a;
		/* 把内容部分改为行内块元素，因为盒子flex：1把盒子撑大了，所以用行内块元素让内容宽度不根据父盒子来 */
		display: inline-block;
		/* 这四句是圆角 */
		border-top-left-radius: 0rpx;
		border-top-right-radius: 20rpx;
		border-bottom-right-radius: 20rpx;
		border-bottom-left-radius: 20rpx;
		/* 最大宽度限定内容输入到百分61换行 */
		max-width: 61%;
		padding: 10rpx 20rpx;
		/* 忽略多余的空白，只保留一个空白 */
		white-space: normal;
		/* 换行显示全部字符 */
		word-break: break-all;
		margin-top: 6rpx;
		font-size: 28rpx;
}

